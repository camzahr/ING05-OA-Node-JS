// Generated by CoffeeScript 1.11.1
var db;

db = require('./db')(__dirname + "/../db/user-metric");

module.exports = {

  /*
    get(username, callback)
    ------------------------
    get all metrics id associated to the user
  
    username: user's pseudo (used to login)
    callback: callback function
  
    key : user-metric:username:metricId
   */
  get: function(username, callback) {
    var metricsId, rs;
    metricsId = [];
    rs = db.createReadStream();
    rs.on('data', function(data) {
      var _, _userMetricId, _username, ref;
      ref = data.key.split(':'), _ = ref[0], _username = ref[1], _userMetricId = ref[2];
      if (data.value && _username === username) {
        return metricsId.push(_userMetricId);
      }
    });
    rs.on('error', callback);
    return rs.on('close', function() {
      return callback(null, metricsId);
    });
  },

  /*
    save(username, mectricsId, callback)
    ------------------------------------
    link one or several metrics id to a user
  
    username: user's pseudo (used to login)
    metricsId: a list of metrics to add to the user
    callback: callback function
   */
  save: function(username, metricsId, callback) {
    var i, len, metricId, ws;
    if (!metricsId.length) {
      callback('not an array');
    }
    ws = db.createWriteStream();
    ws.on('error', callback);
    ws.on('close', callback);
    for (i = 0, len = metricsId.length; i < len; i++) {
      metricId = metricsId[i];
      ws.write({
        key: "user-metric:" + username + ":" + metricId,
        value: true
      });
    }
    return ws.end();
  },

  /*
    remove(username, metricId, callback)
    -----------------------------------
    remove the link between metric and user
  
    username: user's pseudo (used to login)
    metricId: metric's id
    callback: callback function
   */
  remove: function(username, metricId, callback) {
    return db.del("user-metric:" + username + ":" + metricId, function(err) {
      return callback(err);
    });
  }
};
